@value inputHeight, tabHeight from '../dimensions.css';

.common {
  position: relative;
  white-space: nowrap;
  overflow: hidden;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
}

.common > button {
  height: tabHeight;
  box-sizing: border-box;
  border: none;
  padding-left: 10px;
  color: inherit;
  background: none;
  font-family: 'Open Sans', Arial, sans-serif;;
  font-size: 14px;
}

.common > button:focus {
  outline: 1px dotted black;
  outline-offset: -1px;
}

.common > button:nth-of-type(1) {
  padding-right: inputHeight;
}

.common > button:nth-of-type(2) {
  position: absolute;
  right: 0;
  width: calc(inputHeight - 2px);
  background-image: url(../../images/closeTab.svg);
  background-repeat: no-repeat;
  background-size: 12px;
  background-position: center;
}

.common > button:nth-of-type(2):hover {
  background-image: url(../../images/closeTabCircle.svg);
  background-size: calc(inputHeight - 4px);
}

.common > button:only-child {
  padding-right: 10px;
}

.common + .common {
  margin-left: 2px;
}

.normal {
  composes: common;
  background-color: rgba(156, 185, 211, .2);
  box-shadow: inset 0px -1px rgba(172, 172, 172, .1);
}

.active {
  composes: common;
}

.active {
  background-color: white;
}

.selector {
  composes: common;
  background-color: inherit;
  overflow: visible;
  width: 90px;
}

.normal:hover,
.selector:hover {
  background-color: rgba(255, 255, 255, .5);
}

.selector :global(.cspace-input-DropdownMenuInput--common) > input {
  background-image: none;
  height: 30px;
}

.selector :global(.cspace-input-DropdownMenuInput--common) > div {
  top: 30px;
}

.selector :global(.cspace-input-TextInput--common) {
  display: inline-block;
  margin: 0;
  border: none;
  padding-left: 6px;
  background-color: inherit;
  color: inherit;
  cursor: default;
}

.selector :global(.cspace-input-TextInput--common):focus {
  outline: 1px dotted black;
}

.selector :global(.cspace-input-DropdownInput--open) > input {
  outline: none;
}

.selector :global(.cspace-input-TextInput--common)::placeholder {
  color: inherit;
  opacity: 1;
}

.selector :global(.cspace-input-TextInput--common)::-webkit-input-placeholder {
  color: inherit;
}

.selector :global(.cspace-input-TextInput--common):-ms-input-placeholder {
  color: inherit;
}
